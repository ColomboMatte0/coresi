# SPDX-FileCopyrightText: 2024 Vincent Lequertier <vincent@vl8r.eu>, Voichita Maxim <voichita.maxim@creatis.insa-lyon.fr>
#
# SPDX-License-Identifier: MIT

data_file: tests/test_mlem.dat
data_type: 'MACACO'
# Energy of the source. If set to -1 the gamma energy is the deposited energy i.e. E1 + E2
E0: [140]
remove_out_of_range_energies: True
# Only needed if E0 is unknown and remove_out_of_range_energies is True, ignored
# otherwise
energy_range: [120, 150]

# Supply a sensitivity file. Needs to have the same size as the number of
# voxels in the volume
# sensitivity_file: filename

# Cameras have scatterer layers normal on z axis, centered on the z axis, below the source
# Up to 5 absorbers are implemented
cameras:
  n_cameras: 2
    # Cameras scatterer have the same characteristics besides their positions
  common_attributes:
    n_sca_layers: 7
    sca_material: Si
    abs_material: Si
    sca_layer_0:
      center: [0, 0, -10]
      size: [9.0, 9.0, 0.2]
    sca_layer_1:
      center: [0, 0, -11]
      size: [9.0, 9.0, 0.2]
    sca_layer_2:
      center: [0, 0, -12]
      size: [9.0, 9.0, 0.2]
    sca_layer_3:
      center: [0, 0, -13]
      size: [9.0, 9.0, 0.2]
    sca_layer_4:
      center: [0, 0, -14]
      size: [9.0, 9.0, 0.2]
    sca_layer_5:
      center: [0, 0, -15]
      size: [9.0, 9.0, 0.2]
    sca_layer_6:
      center: [0, 0, -16]
      size: [9.0, 9.0, 0.2]

    n_absorbers: 5

    # if an absorber layer is missing, define it as None
    # For example, abs_layer_1: None
    abs_layer_0: # bottom
      center: [0, 0, -31.0]
      size: [28.0, 21.0, 3]
    abs_layer_1: # front
      center: [9, 0, -13.0]
      size: [5.0, 5.0, 5.0]
    abs_layer_2: # rear
      center: [-9, 0, -13.0]
      size: [5.0, 5.0, 5.0]
    abs_layer_3: # right
      center: [0, -9, -13.0]
      size: [5.0, 5.0, 5.0]
    abs_layer_4: # left
      center: [0, 9, -13.0]
      size: [5.0, 5.0, 5.0]

  position_0:
    frame_origin: [0, 0, 0]
    Ox: [1, 0, 0]    # parallel to scatterer edge
    Oy: [0, 1, 0]    # parallel to scatterer edge
    Oz: [0, 0, 1]    # orthogonal to the camera, tw the source
  position_1:
    frame_origin: [0, 0, 0]
    Ox: [1, 0, 0]    # parallel to scatterer edge
    Oy: [0, 0, -1]   # parallel to scatterer edge
    Oz: [0, 1, 0]    # orthogonal to the camera, tw the source

volume:
  volume_dimensions: [20, 20, 0.4] # In centimeters
  n_voxels: [50, 50, 1]
  volume_centre: [0, 0, 0]

lm_mlem:
  cone_thickness: 'angular' # angular or parallel
  last_iter: 20
  first_iter: 0
  n_sigma: 2 # Skip the Gaussian above n_sigma * Gaussian std
  width_factor: 1 # Used to artificially modify the spread of the cone
